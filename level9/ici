#include <cstring>
#include <cstdlib>

class Number
{
  private:
	int _n;
	char _annotation[100];
  public:
	Number(int n):_n(n) {}
	void setAnnotation(const char *str)
	{
		memcpy(_annotation, str, strlen(str));
	}
	Number operator+(Number arg)
	{
		return (this->_n + arg._n);
	}
	Number operator-(Number arg)
	{
		return (this->_n - arg._n);
	}
};

int main(int ac, char **av)
{
	if (ac != 2)	
		std::exit(1);
	Number *num1 = new Number(108);
	Number *num2 = new Number(108);
	num1->setAnnotation(av[1]);
	void *ptr = (void*)&num2;
	ptr = (void*)*ptr;
	ptr = (void*)*ptr;
//	int (*function)(void) = (int(*)())ptr;
//	function();
	return (0);
}
